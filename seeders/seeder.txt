Seeders are scripts used to populate your database with initial data. This can be useful for setting up development environments, testing, or providing default data. With Sequelize, you can use seeders to automate this process.

Here's how you can create and use seeders in your Node.js project with Sequelize:

### 1. **Install Sequelize CLI**

If you haven’t already, install Sequelize CLI:

```bash
npm install sequelize-cli --save-dev
```

### 2. **Set Up Sequelize Configuration**

Ensure you have a Sequelize configuration file, typically located at `config/config.json` or `config/config.js`, with settings for your development, test, and production environments.

### 3. **Create a Seeder File**

Generate a seeder file using Sequelize CLI. This file will be used to insert data into your database.

```bash
npx sequelize-cli seed:generate --name demo-user
```

This command creates a new file in the `seeders` directory, such as `20240825000000-demo-user.js`.

### 4. **Define the Seeder**

Edit the generated seeder file to specify the data you want to insert. For example:

**`seeders/20240825000000-demo-user.js`**

```javascript
'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.bulkInsert('Users', [{
      username: 'john_doe',
      email: 'john@example.com',
      password: 'hashed_password', // Make sure passwords are hashed
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      username: 'jane_doe',
      email: 'jane@example.com',
      password: 'hashed_password',
      createdAt: new Date(),
      updatedAt: new Date()
    }], {});
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.bulkDelete('Users', null, {});
  }
};
```

In this example:
- **`up` method**: Defines the data to be inserted into the `Users` table.
- **`down` method**: Defines how to revert the changes if needed, by deleting the inserted data.

### 5. **Run the Seeder**

To apply the seeder and populate your database, use:

```bash
npx sequelize-cli db:seed:all
```

This command will execute all the seeder files in the `seeders` directory.

### 6. **Example Seeders for Your Models**

Here’s how you might create seeders for the models you’ve defined in your project.

**For `User` Model:**

**`seeders/20240825000001-demo-user.js`**

```javascript
'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.bulkInsert('Users', [{
      username: 'alice',
      email: 'alice@example.com',
      password: 'hashed_password', // Replace with an actual hashed password
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      username: 'bob',
      email: 'bob@example.com',
      password: 'hashed_password',
      createdAt: new Date(),
      updatedAt: new Date()
    }], {});
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.bulkDelete('Users', null, {});
  }
};
```

**For `Class` Model:**

**`seeders/20240825000002-demo-class.js`**

```javascript
'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.bulkInsert('Classes', [{
      name: 'Math 101',
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      name: 'History 202',
      createdAt: new Date(),
      updatedAt: new Date()
    }], {});
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.bulkDelete('Classes', null, {});
  }
};
```

**For `Teacher` Model:**

**`seeders/20240825000003-demo-teacher.js`**

```javascript
'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.bulkInsert('Teachers', [{
      name: 'John Smith',
      email: 'john.smith@example.com',
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      name: 'Emily Johnson',
      email: 'emily.johnson@example.com',
      createdAt: new Date(),
      updatedAt: new Date()
    }], {});
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.bulkDelete('Teachers', null, {});
  }
};
```

**For `Profile` Model:**

**`seeders/20240825000004-demo-profile.js`**

```javascript
'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.bulkInsert('Profiles', [{
      bio: 'Software Engineer',
      userId: 1, // Ensure this ID exists in the Users table
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      bio: 'Mathematics Professor',
      userId: 2,
      createdAt: new Date(),
      updatedAt: new Date()
    }], {});
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.bulkDelete('Profiles', null, {});
  }
};
```

### Summary

1. **Install Sequelize CLI** and set up configuration.
2. **Generate seeder files** using Sequelize CLI.
3. **Edit seeder files** to define data insertion and deletion.
4. **Run seeders** with `npx sequelize-cli db:seed:all`.

Using seeders helps you set up initial data quickly and consistently across different environments.